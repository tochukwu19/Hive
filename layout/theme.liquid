{% comment %} npx tailwindcss -i ./src/tailwind.css -o ./assets/application.css --watch {% endcomment %}

<!doctype html>
<html>
  <head>
    <title>{{ page_title }}</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="description" content="{{ page_description | escape }}">
    <link rel="canonical" href="{{ canonical_url }}">
    <meta name="viewport" content="width=device-width,initial-scale=1,shrink-to-fit=no">
  {{ content_for_header }}
    <!-- Header hook for plugins -->
    {{ 'application.css' | asset_url | stylesheet_tag }}
    {{ 'main.css' | asset_url | stylesheet_tag }}
    {{ 'application.js' | asset_url | script_tag }}

    <script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>

    <link
      rel="preload"
      href="{{ "helveticanowtext-black-demo.woff2" | file_url}}"
      as="font"
      type="font/woff2"
      crossorigin="anonymous">

    <link
      rel="preload"
      href="{{ "ClashDisplay-Variable" |  file_url }}"
      as="font"
      type="font/woff2"
      crossorigin="anonymous">

    <link
      rel="preload"
      href="{{ "Comicy.woff2" |  file_url }}"
      as="font"
      type="font/woff2"
      crossorigin="anonymous">

    <style>
      [x-cloak] {
        display: none !important;
      }
    </style>

  </head>
  <body x-data x-bind="$store.globalState">
    <main role="main">
      {% section "template-header" %}
      {% section 'cart-modal' %}
      {{ content_for_layout }}
      {% section "template-footer" %}
    </main>

    <script src="https://unpkg.com/aos@next/dist/aos.js"></script>
    <script>
      AOS.init();
    </script>

    {% comment %} script for global state {% endcomment %}
    <script>
      document.addEventListener('alpine:init', () => {
        Alpine.store('globalState', {
          showCart: false,
          
          toggleCartModal() {
            this.showCart = !this.showCart;
          }
        });
      });
    </script>

    {% comment %} script for refreshing cart to show cart count/ also set the initial alpine state to shopify cart items {% endcomment %}
    <script>
      document.addEventListener('alpine:init', () => {
        Alpine.store('cartState', {
          items: {{ cart.items | json }},
          total: '{{ cart.total_price | money_without_currency }}',
          itemCount: {{ cart.item_count }},
          isLoaded: true,
          
          async refreshCart() {
            try {
              const response = await fetch('/cart.js');
              const cartData = await response.json();
              this.updateCart(cartData);
              console.log('Cart data refreshed:', cartData);
            } catch (error) {
              console.error('Error fetching cart data:', error);
            }
          },
          
          updateCart(newCartData) {
            this.items = newCartData.items;
            this.total = (newCartData.total_price / 100).toFixed(2);
            this.itemCount = newCartData.item_count;
          },
          
          async removeItem(key) {
            try {
              const response = await fetch('/cart/change.js', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                  id: key,
                  quantity: 0
                })
              });
        
            if (!response.ok) {
              throw new Error(`HTTP error! status: ${response.status}`);
            }
              
              const newCartData = await response.json();
              this.updateCart(newCartData);
              console.log('Item removed, cart updated:', newCartData);
            } catch (error) {
              console.error('Error removing item from cart:', error);
            }
          }
        });
      });

      // Refresh cart data after Alpine initialization
      document.addEventListener('alpine:initialized', () => {
        Alpine.store('cartState').refreshCart();
      });
    </script>

    {% comment %} script for implementing add to cart redirect on product card snippet {% endcomment %}
    <script>
      document.addEventListener('alpine:init', () => {
        Alpine.data('productCard', (variantId) => ({
          variantId: variantId,
          isLoading: false,

          addToCart() {
          this.isLoading = true;
          fetch('/cart/add.js', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              items: [{
                id: this.variantId,
                quantity: 1
              }]
            })
          })
          .then(response => response.json())
          .then(data => {
            console.log('Item added to cart:', data);
            // Refresh the cart state
            Alpine.store('cartState').refreshCart();
            // Open the cart modal if desired
            Alpine.store('globalState').toggleCartModal();
          })
          .catch((error) => {
            console.error('Error:', error);
          })
          .finally(() => {
            this.isLoading = false;
          });
            }
        }));
      });
    </script>
  </body>
</html>